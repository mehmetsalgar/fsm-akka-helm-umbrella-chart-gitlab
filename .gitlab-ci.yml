stages:
  - .pre
  - build
  - deploy

variables:
  CREATE_BRANCH: "false"
  USE_CASE_6: "false"

workflow:
  rules:
    - if: $USE_CASE_1 == "true"
      variables:
        UMBRELLA_GRADLE_COMMAND: "helmPackage -Pversion="
    - if: $USE_CASE_2 == "true"
      variables:
        UMBRELLA_GRADLE_COMMAND: "helmPackage -P$SOURCE_REPO-version=$SERVICE_CHART_VERSION -Pversion="
        BRANCH_NAME: $BRANCH_NAME
        GIT_BRANCH_NAME: $BRANCH_NAME-$SOURCE_REPO
        TAG: $SOURCE_REPO-$SERVICE_VERSION
    - if: $USE_CASE_4 == "true"
      variables:
        UMBRELLA_GRADLE_COMMAND: "helmPackage -P$SOURCE_REPO-version=$SERVICE_CHART_VERSION -Pversion="
        BRANCH_NAME: $BRANCH_NAME
        GIT_BRANCH_NAME: $BRANCH_NAME-$SOURCE_REPO
        TAG: $SOURCE_REPO-$SERVICE_VERSION
    - if: $CI_COMMIT_REF_NAME =~ /integration/
      when: always
      variables:
        USE_CASE_6: "true"
        BRANCH_NAME: $CI_COMMIT_REF_NAME
        GIT_BRANCH_NAME: $CI_COMMIT_REF_NAME
        UMBRELLA_GRADLE_COMMAND: "helmPackage -Pversion="
    - if: $USE_CASE_3 == "true" || $USE_CASE_5 == "true"
      when: always

#workflow:
#  except:
#    changes:
#      - .gitlab-ci.yml

include:
  - project: 'org.salgar.fsm.akka/ci-cd-gitlab-pipelines'
    file: '/jobs/gitversion-ci-cd-plugin-extension.gitlab-ci.yml'

before_script:
  - GRADLE_USER_HOME="$(pwd)/.gradle"
  - export GRADLE_USER_HOME

create-branch:
  stage: deploy
  script:
    - |
      export
      echo "create branch ${BRANCH_NAME}-${SOURCE_REPO}"
  rules:
    - if: ($USE_CASE_2 == "true" || $USE_CASE_4 == "true") && $CREATE_BRANCH == "true" && $USE_CASE_3 != "true" && $USE_CASE_5 != "true"
      when: always
    - when: never

determine-umbrella-version:
  extends: .gitversion_function
  rules:
    - if: ($USE_CASE_1 == "true" || $USE_CASE_2 == "true" || $USE_CASE_4 == "true" || $USE_CASE_6 == "true") && $CREATE_BRANCH != "true" && $USE_CASE_3 != "true" && $USE_CASE_5 != "true"
      when: always
    - when: never

package-helm-chart:
  stage: deploy
  image: gradle:7.6.1-jdk17-alpine
  needs:
    - job: determine-umbrella-version
      artifacts: true
  variables:
    UMBRELLA_VERSION: $GitVersion_SemVer
  script:
    - |
      export
      gradle --build-cache $UMBRELLA_GRADLE_COMMAND$UMBRELLA_VERSION
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
  artifacts:
    paths:
      - build/helm/charts/*.tgz
  rules:
    - if: ($USE_CASE_1 == "true" || $USE_CASE_2 == "true" || $USE_CASE_4 == "true" || $USE_CASE_6 == "true") && $CREATE_BRANCH != "true" && $USE_CASE_3 != "true" && $USE_CASE_5 != "true"
      when: always
    - when: never

prepare-helm-umbrella-chart:
  stage: deploy
  image: dtzar/helm-kubectl:3.11.2
  needs:
    - job: determine-umbrella-version
      artifacts: true
    - job: package-helm-chart
      artifacts: true
  variables:
    CHART_NAME: "fsm-akka-helm-umbrella-chart-gitlab"
    CHART_VERSION: $GitVersion_SemVer
  script:
    - |
      echo $HELM_PASSWORD | helm registry login $HELM_URL -u $HELM_USER --password-stdin
      echo "helm push /build/helm/charts/$CHART_NAME-$CHART_VERSION.tgz oci://$HELM_URL$HELM_PATH"
      helm push build/helm/charts/$CHART_NAME-$CHART_VERSION.tgz oci://$HELM_URL$HELM_PATH
  rules:
    - if: ($USE_CASE_1 == "true" || $USE_CASE_2 == "true" || $USE_CASE_4 == "true" || $USE_CASE_6 == "true") && $CREATE_BRANCH != "true" && $USE_CASE_3 != "true" && $USE_CASE_5 != "true"
      when: always
    - when: never

prepare-environment:
  stage: deploy
  needs:
    - prepare-helm-umbrella-chart
  variables:
    GIT_BRANCH_NAME: $BRANCH_NAME
    BRANCH_NAME: $BRANCH_NAME
    SOURCE_REPO: $SOURCE_REPO
    UMBRELLA_BASE_BRANCH_NAME: "development"
    SERVICE_VERSION: $SERVICE_CHART_VERSION
    GIT_CHECKOUT_COMMAND: "git checkout"
    USE_CASE_1: $USE_CASE_1
    USE_CASE_2: $USE_CASE_2
    USE_CASE_3: "false"
  trigger:
    project: 'org.salgar.fsm.akka/fsm-akka-dev-environment'
    branch: 'development'
    strategy: depend
  rules:
    - if: $USE_CASE_1 == "true" && $USE_CASE_3 != "true" && $USE_CASE_5 != "true"
      when: always
    - when: never

prepare-service-for-environment:
  stage: deploy
  needs:
    - job: determine-umbrella-version
      artifacts: true
    - prepare-helm-umbrella-chart
  variables:
    BRANCH_NAME: $BRANCH_NAME
    GIT_CHECKOUT_COMMAND: "git checkout -b"
    SERVICE_VERSION: $SERVICE_CHART_VERSION
    SOURCE_REPO: $SOURCE_REPO
    UMBRELLA_BASE_BRANCH_NAME: "development"
    UMBRELLA_CHART_VERSION: $GitVersion_SemVer
    TAG: $SOURCE_REPO-$SERVICE_CHART_VERSION
    USE_CASE_1: $USE_CASE_1
    USE_CASE_2: $USE_CASE_2
    USE_CASE_4: $USE_CASE_4
    USE_CASE_3: "false"
  trigger:
    project: 'org.salgar.fsm.akka/fsm-akka-dev-environment'
    branch: $UMBRELLA_BASE_BRANCH_NAME
    strategy: depend
  rules:
    - if: ($USE_CASE_2 == "true" || $USE_CASE_4 == "true") && $CREATE_BRANCH != "true"
      when: always
    - if: $USE_CASE_6 == "true" && $CREATE_BRANCH != "true"
      variables:
        TAG: $GitVersion_SemVer
      when: always
    - when: never

delete_branch:
  stage: deploy
  script:
    - |
      export
      echo "Deleting Branch: $TARGET_BRANCH_NAME-$SOURCE_REPO"
  rules:
    - if: ($USE_CASE_3 == "true" || $USE_CASE_5 == "true")
      when: always
    - when: never

continuous-integration-prepare-environment:
  stage: deploy
  needs:
    - prepare-service-for-environment
  variables:
    BRANCH_NAME: $CI_COMMIT_REF_NAME
  trigger:
    project: 'org.salgar.fsm.akka/fsm-akka-4eyes-argocd'
    branch: 'master'
    strategy: depend
  rules:
    - if: $USE_CASE_6 == "true"
      when: always
    - when: never

cleanup-integration-environment-argocd:
  stage: deploy
  needs:
    - continuous-integration-prepare-environment
  variables:
    TARGET_BRANCH_NAME: $CI_COMMIT_REF_NAME
    BRANCH_NAME: $CI_COMMIT_REF_NAME
    USE_CASE_7: "true"
  trigger:
    project: 'org.salgar.fsm.akka/fsm-akka-4eyes-argocd'
    branch: 'master'
    strategy: depend
  rules:
    - if: $USE_CASE_6 == "true"
      when: manual
    - when: never

cleanup-integration-environment-branch:
  stage: deploy
  needs:
    - prepare-service-for-environment
  variables:
    USE_CASE_7: "true"
  trigger:
    project: 'org.salgar.fsm.akka/fsm-akka-dev-environment'
    branch: 'development'
    strategy: depend
  rules:
    - if: $USE_CASE_6 == "true"
      when: manual
    - when: never
